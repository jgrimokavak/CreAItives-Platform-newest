# Fix_PublicURL_StaticFront_API_Split_Runbook.md
"""
Context (full picture):
- In development, the frontend (Vite) and backend (API) ran together; everything worked.
- We changed production to a split model: **Static Deployment** serves the frontend; **Autoscale** serves only `/api/*`.
- After deploying, opening the public URL showed:
  {"message":"API endpoint not found. Frontend is served from static deployment."}
- This means the **public site URL is still attached to the API deployment** instead of Static, and/or the env wiring between Static↔API isn’t set.
- Requirement: **Keep** the public URL as the user-facing site:
  **https://creaitives-platform-2-0.replit.app** (this must be the frontend on Static).
- Do **not** change Autoscale machine settings (already right-sized 1 vCPU / 2 GiB, max=1).

Objective:
Make https://creaitives-platform-2-0.replit.app serve the SPA from Static with zero compute, and run the API on its own system URL. Wire envs, rebuild, redeploy, and verify. No code edits unless the optional redirect is requested.

Guardrails:
- No Autoscale sizing changes.
- Prefer configuration over code. If something is unclear, write the assumption into the report and proceed.
- Plan before acting.

Plan_First (print this section with concrete values before making changes):
1) List all deployments and their attached domains; identify which is **Static** and which is **Autoscale**.
2) Determine the **Autoscale system URL** (the default `*.replit.app` domain that always exists). Call it **API_URL** and print it.
3) Confirm env keys exist:
   - Frontend: `VITE_PublicApiBaseUrl`
   - API: `Allowed_Web_Origins`

Actions:

1) Domain_Reassignment
- Ensure **https://creaitives-platform-2-0.replit.app** is attached to the **Static Deployment** (frontend).
- Detach **https://creaitives-platform-2-0.replit.app** from the **Autoscale** deployment if currently attached.
- Keep the Autoscale deployment reachable at **API_URL** (the system URL you detected). Do not attach the public site URL to Autoscale.

2) Static_SPA_Rewrite
- On the Static Deployment, ensure a rewrite rule exists: `/* → /index.html`.

3) Environment_Wiring
- **Frontend (Static build):**
  - Set `VITE_PublicApiBaseUrl=API_URL`
  - Rebuild the SPA and redeploy the Static site so the bundle calls the API at **API_URL**.
- **Backend (Autoscale):**
  - Set `Allowed_Web_Origins=https://creaitives-platform-2-0.replit.app`
  - Redeploy the API so the CORS allowlist is active.
- (Optional safety) If supported and not already present, set `STATIC_APP_ORIGIN=https://creaitives-platform-2-0.replit.app` and add a 308 redirect on `/`. Skip code edits unless explicitly needed.

4) Smoke_Tests (report-only; no code edits)
- Open **https://creaitives-platform-2-0.replit.app** → SPA loads (HTML/CSS/JS from Static).
- Browser Network tab: API requests go to **API_URL/api/...** and return 2xx.
- Deep-link to an inner SPA route and hard-refresh → still loads (rewrite works).
- Visit **API_URL/** → JSON 404 or redirect (expected).
- `GET **API_URL/healthz**` → 200 OK.
- CORS preflight to `/healthz` (or `/api/...`):
  - With `Origin: https://creaitives-platform-2-0.replit.app` → `Access-Control-Allow-Origin` present.
  - With `Origin: https://unauthorized.example` → no ACAO / blocked.

5) Reports (produce files only; include concrete values used)
- `_fix_reports/Domain_Attachment_Report.md` — final mapping of domains → deployments.
- `_fix_reports/Env_Wiring_Summary.txt` — keys and values set:
  - `VITE_PublicApiBaseUrl=<API_URL>`
  - `Allowed_Web_Origins=https://creaitives-platform-2-0.replit.app`
- `_fix_reports/Smoke_Test_Report.txt` — URLs hit, status codes, and key headers.
- `_fix_reports/Final_Validation_Report.md` — PASS/FAIL with any follow-ups.

Success Criteria:
- Public site loads at **https://creaitives-platform-2-0.replit.app** from Static.
- API runs at **API_URL**; `/healthz` = 200; `/` = 404 JSON or redirect.
- CORS allows only the site origin.
- Frontend network calls hit **API_URL/api/...** and succeed.

Notes on cost (FYI):
- Static serving the SPA uses $0 compute; API-only traffic on Autoscale remains right-sized (1 vCPU / 2 GiB, max=1), preserving ~75% savings vs the old config.

"""
