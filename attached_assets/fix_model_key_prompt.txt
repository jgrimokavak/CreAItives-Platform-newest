
Fix 400 error – ensure modelKey is provided and enum updated

1. **shared/schema.ts**
   ```ts
   export const generateSchema = z.object({
     modelKey: z.enum(["gpt-image-1", "imagen-3", "flux-pro"]),
     inputs:   z.record(z.any())
   });
   export type ModelKey = z.infer<typeof generateSchema>["modelKey"];
   ```

2. **PromptForm.tsx** (Create tab)
   ```tsx
   const [modelKey, setModelKey] = useState<ModelKey>("gpt-image-1");

   function handleSubmit(values: Record<string, any>) {
     mutate({ modelKey, inputs: values });
   }
   ```

3. **ModelSelect.tsx**
   ```tsx
   onValueChange={(val:ModelKey)=> setModelKey(val)}
   ```

4. **Backend route `/api/generate`**
   ```ts
   const { modelKey, inputs } = generateSchema.parse(req.body);
   ```

5. **Remove stale enums**
   Search repo for `"dall-e-2"` and `"dall-e-3"`; delete from
   any switch statements or arrays.

6. **Test matrix**
   * GPT‑Image‑1 → POST has `"modelKey":"gpt-image-1"` → 200
   * Imagen‑3     → `"modelKey":"imagen-3"` → 200
   * Flux‑Pro     → `"modelKey":"flux-pro"` → 200
   * Missing key  → returns 400 (“modelKey required”)

After these changes the 400 “modelKey undefined” error disappears.
