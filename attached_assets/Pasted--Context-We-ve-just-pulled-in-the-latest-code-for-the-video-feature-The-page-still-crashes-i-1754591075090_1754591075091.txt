# Context
# We’ve just pulled in the latest code for the `/video` feature. The page still crashes immediately with:
# 1. `TypeError: modelConfig.maxDuration.replace is not a function` in VideoPage.tsx  
# 2. `GET /api/projects` → 500 Internal Server Error  

Objective: Locate and correct the two blocking issues in the current implementation.

1. **Handle numeric vs. string `maxDuration`**  
   - File: `client/src/pages/VideoPage.tsx`  
   - Problem: The code does  
     ```ts
     const maxDurationSeconds = parseInt(modelConfig.maxDuration.replace('s', ''));
     ```  
     which fails when `modelConfig.maxDuration` is a number.  
   - Fix: Refactor to branch on type, for example:  
     ```ts
     const rawMax = modelConfig.maxDuration;
     const maxDurationSeconds = typeof rawMax === 'string'
       ? parseInt(rawMax.replace('s', ''))
       : rawMax;
     ```  
     Update any related logic (resetting form values, comparisons, badges) to use this unified numeric value.

2. **Implement GET `/api/projects`**  
   - File: `server/routes/project-routes.ts`  
   - Problem: There is no GET handler for `/api/projects`, so the front-end call  to list projects fails.  
   - Fix: Add a `router.get('/', async (req, res) => { … })` that:
     1. Authenticates the user (`req.user` → `userId`).  
     2. Calls `storage.getProjectsByUser(userId)` (or equivalent).  
     3. Returns the array of projects as JSON (`res.json(projects)`).  

3. **Optional: Verify WebSocket HMR vs. App socket**  
   - The Vite HMR client is still trying to connect to `wss://localhost:undefined/?token=…`. This is separate from our `/ws` hook. You can ignore it for now, or in `vite.config.ts` set:
     ```js
     server: {
       hmr: {
         host: '0.0.0.0',
         protocol: 'wss'
       }
     }
     ```  
     to silence that HMR error.

After applying these fixes, reload `/video` and confirm:
- No `maxDuration.replace` errors.
- `/api/projects` returns `200` with a list (empty is fine) so the project dropdown populates.
