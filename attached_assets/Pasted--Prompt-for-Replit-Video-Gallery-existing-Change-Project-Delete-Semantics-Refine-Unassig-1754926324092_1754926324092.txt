# Prompt for Replit — **Video Gallery (existing)**: Change Project Delete Semantics + Refine Unassigned Videos
## Extended Context
We want projects to behave as **organizational containers** only. Deleting a project should **not** delete its videos. Instead, those videos become **unassigned** (no project). The Video Gallery already lists projects and a current “Unassigned” bucket that looks like a project; we want a clearer, more polished treatment for unassigned videos.
All work must **modify the existing Video Gallery** (no new routes/pages) and leave the Create Video, Image, and Car areas untouched.
**Before coding**, review the current Video Gallery components, data fetching, and the `projects`/`videos` schema and routes. Confirm the approach in the PR description.
## Goals (User Outcomes)
1) **Project Deletion ⇒ Videos Become Unassigned**
When a user **deletes a project**, its videos are **not removed**. Their `project_id` is cleared so they appear as **unassigned**.
Video deletion remains as-is via video card or bulk actions.
2) **Refined “Unassigned” Presentation**
Replace the current “Unassigned” faux project card with a **dedicated Unassigned section**:
Clear label (e.g., “Videos without a project”).
Short helper text explaining why items appear here.
Actions to quickly **assign** videos to an existing project or **create & assign** to a new project.
3) **Quality-of-Life for Unassigned**
**Bulk select** in the Unassigned section to move multiple videos into a project.
Per‑card quick action: **Move to project…** (plus “Create new project & move”).
Sorting and filtering should continue to work for Unassigned (status, date, search).
*(Archive/Delete, Duplicate, and Safe Reorder from prior scope remain, but focus this change on new delete semantics + Unassigned UX.)*
## Placement & UX (match current visuals)
**Project actions (⋯)** menu on each project row:
Open
Duplicate project
Archive project…
Divider
**Delete project… (safe)** → confirm modal clarifies that videos will **not** be deleted; they will move to **Unassigned**.
**Unassigned section** in the gallery:
Header: “Videos without a project”
Subtext: “These are videos that were created without a project or whose project was deleted.”
Controls:
**Move selected to project…**
**Create project & move**
Per-card overflow adds **Move to project…**
Keep the existing filter bar (Status / Date Range / Search Prompts / Clear Filters) unchanged.
## Data / API (High-Level; audit and adapt)
**Schema:** Ensure `videos.project_id` can be **NULL**. If it’s currently NOT NULL, add a **backward‑compatible migration** (nullable + default handling).
**Delete project API:** On delete, **bulk update** the project’s videos to `project_id = NULL` **before** removing the project record.
**Unassigned queries:** Update gallery queries to include `videos` where `project_id IS NULL` for the Unassigned section.
**Move video to project:** Provide/confirm an endpoint to set a video’s `project_id` (bulk variant for multiple IDs).
**(Optional)** Keep archive semantics unchanged (archiving a project does **not** reassign videos; only delete does).
## Non‑Goals / Guardrails
Do **not** delete videos when deleting a project.
Do **not** create a new gallery or route; modify the **existing** Video Gallery only.
Do **not** add project controls to the Create Video view.
Do not touch Image or Car sections.
## Acceptance Criteria
Deleting a project:
Shows a modal explaining videos will **not** be deleted and will move to **Unassigned**.
After confirmation, the project is gone; its videos appear under **Unassigned**.
Unassigned section:
Clearly labeled with helper text.
Supports **bulk select** and **Move to project…** (plus **Create project & move**).
Per-card overflow includes **Move to project…**.
Filters/search/sort work with Unassigned as they do for projects.
No regressions to existing project actions (Archive, Duplicate, Safe Reorder if present).
## Accessibility & Performance
All actions keyboard-accessible; bulk move workflow is navigable without a mouse.
Bulk reassignment and Unassigned rendering remain responsive.
## Telemetry (if available)
`project_deleted_to_unassigned` `{project_id, reassigned_count}`
`video_moved_to_project` `{video_ids, target_project_id, count}`
(Optional) `unassigned_assign_created_project` `{new_project_id, count}`
**Before implementation:** Audit current schema/routes/UI and confirm the migration plan (nullable `project_id`, bulk update on delete) and UI integration in the PR description.