fix_batch2_prompt = """
Urgent Fixes for Batch Car Generation
=====================================

Batch jobs are all failing (0 done, all 13 failed). We must:

1. Verify CSV upload routing
   - Confirm front-end CSVUpload uses formData.append("file", ...)
   - Confirm server route is upload.single("file")
   - Add log in /api/car-batch to console.log("Received CSV, size:", req.file.buffer.length)

2. Early environment check
   - At top of batch.ts, add:
     
ts
     if (!process.env.REPLICATE_API_TOKEN) {
       console.error("Missing REPLICATE_API_TOKEN");
     }

   - In /api/car-batch, if missing, res.status(500).json({ error: "REPLICATE_API_TOKEN not set" })

3. Use correct Replicate version for Imagen‑3
   - Replace version: "latest" with the actual Imagen‑3 version ID:
     
version: "7a54f1d7f23abba0bd8341bd31412a06ebea759eca9e15ce5fcf4059bcc6c0f1"

   - Or import and use Replicate SDK:
     
ts
     import Replicate from "replicate";
     const client = new Replicate({ auth: process.env.REPLICATE_API_TOKEN });
     const prediction = await client.predictions.create({
       version: "<imagen-3-version-id>",
       input: { prompt, aspect_ratio, negative_prompt:"", safety_filter_level:"block_only_high" }
     });


4. Add per-row logging in processBatch
   
ts
   for (let i = 0; i < rows.length; i++) {
     console.log(`Batch ${id}: Row ${i+1}/${rows.length} prompt:`, prompt);
     try {
       // existing processing
     } catch (err) {
       console.error(`Batch ${id} Row ${i+1} error:`, err);
       job.failed++;
       job.errors.push({ row: i+2, reason: err.message.slice(0,200) });
     }
   }
Confirm pollUntilSuccess function

Ensure it polls until status === "succeeded" and returns the result.

Log each polled status.

Fix handler return in /api/car-batch

After queue.add(...), immediately:

ts
Always show details

Copy
return res.status(202).json({ jobId });
Remove any code after this return.

Add debug route

ts
Always show details

Copy
app.get("/api/batch/debug/:id", (req, res) => {
  res.json(jobs.get(req.params.id) || { error: "Not found" });
});
Testing

3-row CSV → HTTP 202 with { jobId }, polling /api/batch/:id increments done > 0, zipUrl appears, download works.

55 rows → HTTP 400 with error “Row limit exceeded (max 50)”.

Malformed CSV → HTTP 400 “Malformed CSV” with detailed errors.

Simulated Replicate error → row counted in failed_rows.json inside ZIP.

Reminder: Do not modify the existing ImageCard or other unrelated pages"
