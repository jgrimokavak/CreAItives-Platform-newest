# Context  
You're working inside the CreAItives Platform (React + Vite + TypeScript + Tailwind + shadcn/ui).  
You've already created a `VideoCreationPage` route.  

Now we’re ready to build the full front-end **UI for generating videos**, using **Google Vertex AI video models**, such as `Veo 3`, `Veo 3 Fast`, and `Veo 2`.  

These models have different capabilities and constraints — the UI must adapt depending on the selected model.

# Objective  
Build the full **video generation form + session results + project-based gallery**, with a layout consistent with the rest of the app.

---

# 1. UI: Video Generation Form

## Form Fields

### Prompt Inputs
- `Prompt` (Textarea, required)
- `Negative Prompt` (Input, optional)

### Model Selector (Dropdown)
- Options: `Veo 3`, `Veo 3 Fast`, `Veo 2`
- On model change: show/hide parameters accordingly

### Parameters (based on selected model)
- **Aspect Ratio**  
  - Dropdown  
  - Veo 3: fixed to `"16:9"` (disabled or hidden)  
  - Veo 2: options `16:9`, `9:16`, `1:1`

- **Resolution**  
  - Dropdown  
  - Veo 3: `720p`, `1080p`  
  - Veo 2: only `720p`

- **Duration**  
  - Dropdown (not a slider!)  
  - Veo 3: fixed to `8 seconds` (disabled or hidden)  
  - Veo 2: values `5`, `6`, `7`, `8`

- **Sample Count**  
  - Dropdown  
  - Veo 3: `1`, `2`  
  - Veo 2: `1`, `2`, `3`, `4`

- **Generate Audio**  
  - Only for Veo 3  
  - Checkbox default true (optional to show)

- **Seed** (optional number input)

- **Enhance Prompt** (checkbox)

- **Person Generation** (dropdown):  
  - Options: `allow_all`, `dont_allow`

### Project Selector
- Dropdown of existing projects
- Button: `+ New Project` → opens modal or drawer
  - Inputs: `Project Name`
  - Creates a project and updates dropdown

### Submit
- Primary button: `Generate Video`
- Disable button if prompt is empty or generation is running
- Show spinner or progress indicator

---

# 2. Result Area: Show Generated Video(s)

- If sample count = 2 → show both videos in a responsive grid
- Each video card includes:
  - `<video controls>` player
  - Metadata: model, aspect, resolution, duration
  - Actions:
    - `Download MP4`
    - `Copy GCS URI`
    - `Re-generate`

---

# 3. Session Gallery (local results only)

- Below the form: show previously generated videos (from this session)
- Grid layout with cards
- Each card:
  - Thumbnail or playable video
  - On click → modal with full metadata + actions

---

# 4. Reusability & Styling

- Use consistent structure with existing image-generation pages
- Use shadcn/ui components and Tailwind layout
- Consider breaking the form into small components:
  - `VideoGenerationForm`
  - `VideoResultCard`
  - `SessionGallery`
  - `ProjectSelector`

---

# Constraints

- No need to hook to real backend yet — use mock state handlers
- Ensure model constraints are enforced in the form (e.g., fixed duration on Veo 3)
- Don’t use sliders where integers are expected
- Don’t allow aspect ratios or resolutions not supported by the selected model
- Don’t break layout if sample count is 2

---

# Deliverables

- Full UI for the `/video` page
- All forms and inputs working with internal state only
- Adaptive behavior based on selected model
- Gallery area showing locally generated videos
- Ready to be connected to backend in future steps

Let me know once the UI is complete and ready for integration.
