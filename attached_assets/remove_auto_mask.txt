
Remove automatic blank mask
===========================

Issue
-----
Current backend creates a fully‑transparent mask when the user doesn’t supply one.  GPT‑Image‑1 treats a blank mask as “replace the entire image,” discarding the reference photo.

Required change
---------------
*If the user does not upload a mask, do **not** send any `mask` parameter in the request body.*

Backend changes
---------------
`server/routes.ts`

1. When processing the request:
   ```ts
   const userProvidedMask = !!mask;   // mask is base64 string or undefined
   ```

2. **Delete** the code block that auto‑generates a transparent PNG mask.

3. Build uploadables:
   ```ts
   const uploadables = await Promise.all(imgPaths.map(toUploadable));
   ```

4. Build `editParams` only adding `mask` if user supplied it:
   ```ts
   const editParams: any = {
     model: "gpt-image-1",
     image: uploadables,
     prompt,
     n,
     size,
     quality
   };
   if (userProvidedMask) {
     const maskUpload = await toUploadable(maskPath);
     editParams.mask = maskUpload;
   }
   const rsp = await openai.images.edit(editParams);
   ```

5. Remove validation that required same‑size mask when none provided.

Frontend changes
----------------
* Keep mask uploader optional, but if no mask file selected simply omit the
  `mask` field from the JSON body / multipart form.

Validation
----------
`editImageSchema`  
`mask` stays `z.string().optional().nullable()`, but backend no longer creates a placeholder.

Outcome
-------
When no mask is sent, GPT‑Image‑1 performs an “edit‑in‑place” operation, using
the uploaded image as full context instead of replacing everything, producing
results that respect the source photo.
