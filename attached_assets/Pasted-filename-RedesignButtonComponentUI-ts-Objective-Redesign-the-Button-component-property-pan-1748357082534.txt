filename: RedesignButtonComponentUI.ts

Objective:  
Redesign the **Button component property panel** to improve usability, visual clarity, and consistency with the existing Image and Text component panels.

---

1. UI Layout & Visual Hierarchy
- Redesign the layout of all property controls for the Button component.
- Use clear visual grouping, consistent spacing, and intuitive labels.
- Group related settings under collapsible sections if needed (e.g. "Size & Layout", "Typography", "Styling", "Behavior").
- Prioritize ease of scanning—ensure the layout reduces cognitive load and naturally guides the user.

---

2. Visual Consistency
- Base the new design language and logic on the improvements already made for the **Image** and **Text** components.
- Apply similar spacing, font sizes, margins, toggles, and slider styling.

---

3. Button Preview Quality
- Ensure the button renders cleanly and looks polished when inserted into the canvas.
- Typography, background, padding, and border styling must not clash or break in real-world usage.

---

4. Property Grouping & Order
Reorganize the property categories logically:
- General → Label Text, Link (URL/action)
- Size & Layout → Width, Height, Padding, Margin
- Typography → Font, Size, Weight, Color
- Styling → Background Color, Border Radius (new), Shadow
- Behavior → Hover Effects, Click Action

---

5. Add New Control: Border Radius
- Implement a new **slider** for setting border-radius (0–64px).
- Ensure it updates the CSS `border-radius` in real-time.

---

6. Padding & Margin Audit
- Audit the current behavior of **internal padding** and **external margin**.
- Fix any inconsistencies—spacing should match the applied values precisely.
- Avoid overlap or visual misalignment when padding/margin values are customized.

---

Testing:
✔ All properties are logically grouped and visually balanced.  
✔ Button renders cleanly on canvas at default and custom states.  
✔ Border radius control works with live preview.  
✔ Padding and margin adjustments reflect accurate spacing visually and in code.  
✔ UI feels consistent with Image/Text property panels.

---

Constraints:
- Do not remove any existing functionality.
- Use consistent component naming, spacing units, and sliders already used elsewhere.
- Final result should feel production-ready and user-friendly.

