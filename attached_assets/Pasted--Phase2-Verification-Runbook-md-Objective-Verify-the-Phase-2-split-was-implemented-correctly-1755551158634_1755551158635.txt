# Phase2_Verification_Runbook.md
"""
Objective: Verify the Phase 2 split was implemented correctly without breaking functionality. Do NOT modify code. Only run checks, start/stop servers locally as needed, and produce a clear report.

High-Level Checks:
- API-only server behavior in production mode (no SPA hosting; non-/api paths → 404).
- CORS allowlist enforced: allowed origin passes; disallowed origin blocked.
- Health endpoint works.
- Static build artifacts present and suitable for Static Deployment (index.html + assets, SPA rewrite readiness).
- Client uses VITE_PublicApiBaseUrl during static build (string present in built JS).
- Autoscale settings unchanged (read-only confirmation).
- Development mode still works (Vite dev retains SPA serving).

Plan_First (print before executing):
1) Detect server start command(s) and port(s) from package.json (e.g., start, start:prod, dev).
2) Locate static build directory (e.g., dist/public) and list key files.
3) Identify API base path(s); confirm /api/* exists; else use /healthz for tests.

Tasks:

1) Produce_Environment_Snapshot
- Print:
  - Node version, OS.
  - package.json scripts.
  - Current .env.example lines for:
    - VITE_PublicApiBaseUrl
    - Allowed_Web_Origins
- Output to _verification/Env_Snapshot.txt.

2) Verify_Static_Artifacts
- Confirm folder (e.g., dist/public) exists.
- List: index.html, top-level asset dirs (e.g., assets/), file counts + sizes summary.
- Grep built JS for the literal VITE_PublicApiBaseUrl value placeholder (string match of "VITE_PublicApiBaseUrl" or resolved URL if present).
- Output to _verification/Static_Artifacts_Report.txt.

3) Start_API_In_Production_Mode
- Start server in production mode (no dev middleware). Use the correct script (infer from package.json).
- Detect the listening port from logs or defaults (common: 3000/5000). Record it.
- Wait until ready.

4) API_Only_Behavior_Test
- Using curl against http://localhost:<PORT>:
  - `GET /` → expect 404 (SPA disabled in prod).
  - `GET /healthz` → expect 200 OK and body "ok" or similar.
- Record status codes and response snippets.
- Save to _verification/Api_Only_Report.txt.

5) CORS_Allowlist_Tests
- Choose an **allowed** origin (from Allowed_Web_Origins or a placeholder like https://app-staging.example).
- Choose a **disallowed** origin (https://unauthorized.example).
- Preflight (OPTIONS) and simple GET tests against an API path (prefer `/api/...` if present; else `/healthz`):
  - Allowed origin:
    ```
    curl -i -X OPTIONS http://localhost:<PORT>/healthz \
      -H "Origin: <ALLOWED_ORIGIN>" \
      -H "Access-Control-Request-Method: GET"
    ```
    Expect: `Access-Control-Allow-Origin: <ALLOWED_ORIGIN>` and 204/200.
  - Disallowed origin:
    same command with `<DISALLOWED_ORIGIN>`; expect missing ACAO header and/or 403/blocked behavior.
- Save full headers to _verification/CORS_Test_Report.txt with PASS/FAIL notes.

6) Dev_Mode_Sanity_Check
- Stop prod server.
- Start dev mode (Vite).
- Confirm the SPA renders at the dev URL and that API calls still function locally.
- Capture a short note with the dev URL and a successful request.
- Output to _verification/Dev_Mode_Report.txt.

7) Autoscale_Config_Readback (no changes!)
- If available via Replit CLI/UI dump or docs file, record:
  - Machine power = 1 vCPU / 2 GiB
  - Max instances = 1
- Note “read-only confirmation”.
- Save to _verification/Autoscale_Readback.txt.

8) Consolidated_Report
- Create _verification/Phase2_Verification_Report.md summarizing:
  - Ports used, paths tested.
  - Results of API-only test (404 on /, 200 on /healthz).
  - CORS allowed vs disallowed outcomes.
  - Static artifacts check + presence of index.html and assets.
  - Evidence of VITE_PublicApiBaseUrl in built bundle (or note if environment not set at build).
  - Dev mode sanity.
  - Autoscale config confirmation.
  - Final PASS/FAIL for readiness to deploy Static app and switch DNS.
- Include a clear “Next steps” section:
  - Deploy Static to staging; set SPA rewrite `/* → /index.html`.
  - API env: Allowed_Web_Origins=<static-domain>.
  - Rebuild static with VITE_PublicApiBaseUrl=<api-domain>.
  - Promote domains when staging passes.

Guardrails:
- Do NOT edit source files.
- Do NOT change env values persistently.
- If a step is ambiguous, write the assumption to the report and continue.

Deliverables:
- _verification/Env_Snapshot.txt
- _verification/Static_Artifacts_Report.txt
- _verification/Api_Only_Report.txt
- _verification/CORS_Test_Report.txt
- _verification/Dev_Mode_Report.txt
- _verification/Autoscale_Readback.txt
- _verification/Phase2_Verification_Report.md
"""
